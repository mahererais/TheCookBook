{% extends 'Front/user/profile.html.twig' %}


	{% block content %}
	<div>
	<h1 class="mb-4">Modifier mes informations</h1>

		{{form_start(form, {attr: {class: 'w-100', novalidate: 'novalidate'}},)}}

		<div class="col-12 mb-3">
			{{form_label(form.email)}}
			{{form_widget(form.email)}}
			{{form_help(form.email)}}
			{{form_errors(form.email)}}
		</div>
		<div class="col-12 mb-3">
			{{form_label(form.lastname)}}
			{{form_widget(form.lastname)}}
			{{form_help(form.lastname)}}
			{{form_errors(form.lastname)}}
		</div>
		<div class="col-12 mb-3">
			{{form_label(form.firstname)}}
			{{form_widget(form.firstname)}}
			{{form_help(form.firstname)}}
			{{form_errors(form.firstname)}}
		</div>
		<div class="col-12 mb-3">
			{{form_label(form.picture)}}
			{{form_widget(form.picture)}}
			{{form_help(form.picture)}}
			{{form_errors(form.picture)}}
		</div>
		<div class="col-12 mb-3 d-flex align-items-center gap-4 ">
			<a id="upload_widget" class="cloudinary-button tcb_btn">Choisir un fichier</a>
			<a class="login_btn avatar">
				<img src="{{app.user.picture}}" alt="avatar image" id="cloudinary_image">
			</a>
			<small class="cloudinary-small"></small>
			<input type="hidden" id="cloudinaryUrl" name="cloudinaryUrl">
		</div>
		<div class="col-12 mb-3">
			{{form_label(form.speciality)}}
			{{form_widget(form.speciality)}}
			{{form_help(form.speciality)}}
			{{form_errors(form.speciality)}}
		</div>
		<div class="col-12 mb-3">
			{{form_label(form.experience)}}
			{{form_widget(form.experience)}}
			{{form_help(form.experience)}}
			{{form_errors(form.experience)}}
		</div>
		<div class="col-12 mb-3">
			{{form_label(form.presentation)}}
			{{form_widget(form.presentation)}}
			{{form_help(form.presentation)}}
			{{form_errors(form.presentation)}}
		</div>
		<div class="col-12 mb-3">
			{{form_label(form.password)}}
			{{form_widget(form.password)}}
			{{form_help(form.password)}}
			{{form_errors(form.password)}}
		</div>
		<div class="col-12 mb-3">
			{{form_label(form.status)}}
			{{form_widget(form.status)}}
			{{form_help(form.status)}}
			{{form_errors(form.status)}}
		</div>
		<div class="col-12 mb-3">

		<button class="tcb_btn" type="submit">Valider</button>

		{{form_end(form)}}
		
		</div>
	</div>
	{% endblock %}


{% block js %}
	<script src="https://upload-widget.cloudinary.com/global/all.js" type="text/javascript"></script>  

	<script type="text/javascript">  
		var myWidget = cloudinary.createUploadWidget({
			cloudName: 'dxl8cac89', 
			uploadPreset: 'test_upload',
			// add french message
			language: 'fr',
			text: {
				"fr": {
					"or": "ou",
					"queue": {
						"title": "Fichier téléchargé",
						"title_uploading_with_counter": "Téléchargement d'un fichier",
						"title_processing_with_counter": "Téléchargement en cours",
						"title_uploading": "Téléchargement d'un fichier",
						"mini_title": "Téléchargé",
						"mini_title_uploading": "En cours de téléchargement",
						"mini_title_processing": "Téléchargement en cours",
						"show_completed": "Show completed",
						"retry_failed": "Retry failed",
						"abort_all": "Abort all",
						"done": "Envoi",
						"mini_upload_count": "Un fichier téléchargé",
						"statuses": {
							"uploading": "Uploading...",
							"processing": "Téléchargement...",
							"error": "Error",
							"uploaded": "Terminé",
							"aborted": "Aborted",
						},
					},
					"crop": {
						"title": "Recadrer",
						"crop_btn": "Recadrer",
						"skip_btn": "Valider sans recadrer",
						"image_error": "Erreur de chargement de l'image",
					},
					"menu": {
						"files": "Mes fichiers",
						"web": "Adresse web",
					},
					"local": {
						"browse": "Parcourir",
						"dd_title_single": "Faites glisser et déposez ici",
						"drop_title_single": "Déposez un fichier à télécharger"
					},
					"camera": {
						"capture": "Capturer",
						"cancel": "Annuler",
						"take_pic": "Prends une photo et télécharge là",
						"explanation": "Assurez-vous que votre caméra est connectée et que votre navigateur autorise la capture de la caméra. Lorsque vous êtes prêt, cliquez sur Capturer.",
						"camera_error": "Échec de l'accès à la caméra",
						"retry": "Réessayer la caméra"
					},
					"dropbox": {
						"no_auth_title": "Téléchargez des fichiers depuis votre compte Dropbox.",
						"no_auth_action": "Connectez-vous à Dropbox"
					},
					"google_drive": {
						"no_auth_title": "Téléchargez des fichiers depuis votre Google Drive.",
						"no_auth_action": "Se connecter à Google Drive",
					},
					"url": {
						"inner_title": "URL publique du fichier à télécharger:",
						"input_placeholder": "http://remote.site.example/images/remote-image.jpg"
					},
					"actions": {
						"upload": "Télécharger"
					},
				},
			},
			// remove "add more" in the widget
			multiple: false,
			// upload image parameters
			maxImageHeight: 288,
			maxImageWidth: 512,
			croppingValidateDimensions: true,
			//validateMaxWidthHeight: true,
			cropping: true,
			croppingAspectRatio: 16/9,
			resourceType: "image",
			sources: [
				"local",
				"url",
				"camera",
				"google_drive",
				"facebook",
				"dropbox",
				"instagram",
			],
			styles: {
				palette: {
					window: "#078975",
					sourceBg: "#F9F9F9",
					windowBorder: "#078975",
					tabIcon: "#F9F9F9",
					inactiveTabIcon: "#3F3735",
					menuIcons: "#3F3735",
					link: "#F55E51",
					action: "#FFFFFF",
					inProgress: "#FFAF08",
					complete: "#F55E51",
					error: "#130909",
					textDark: "#078975",
					textLight: "#fcfffd"
				},
				fonts: {
					default: null,
					"'Poppins', sans-serif": {
						url: "https://fonts.googleapis.com/css?family=Poppins",
						active: true
					}
				}
			},
			folder: 'Images'}, (error, result) => { 
				if (!error && result && result.event === "success") { 
				console.log('Done! Here is the image info: ', result.info); 
					// get file name 
					const file_name = `${result.info.original_filename}.${result.info.format}`;
					// retrieve picture image name element on DOM
					const imageNameElement = document.querySelector(".cloudinary-small");
					// set file_name to value of picture input   
					imageNameElement.textContent = file_name;

					// retrieve cloudinary input hidden element on DOM
					const cloudinary_input = document.getElementById("cloudinaryUrl");
					// set file_name to value of picture input   
					cloudinary_input.value = result.info.url;

					// retrieve cloudinary cloudinary_image element on DOM
					const cloudinary_image = document.getElementById("cloudinary_image");
					// set file_name to value of picture scr image   
					cloudinary_image.src = result.info.url;
				}
			}
		)

		document.getElementById("upload_widget").addEventListener("click", function(){
			myWidget.open();
		}, false);
	</script>

{% endblock %}

