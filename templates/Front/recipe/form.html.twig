{% extends "base.html.twig" %}

{% block body %}


    <div class="container bg-light pt-5">
	<div class="row mb-2">
		<div class="col">
			<div class="row g-0 border rounded overflow-hidden flex-md-row align-items-start mb-4 shadow-sm position-relative">
				<div class="col-8 p-4 d-flex flex-column position-static bg-light">
                    {% if app.request.attributes.get("_route") is same as "tcb_front_recipe_add" %}
					    <h2>Ajouter une recette</h2>
                    {% else %}
                        <h2>Modifier la recette</h2>
                    {% endif %}
                    {{form_start(form, {attr: {novalidate: 'novalidate'}})}}
                    
						<div class="col-3 mb-3">
							{{form_label(form.title)}}
							{{form_widget(form.title)}}
							{{form_help(form.title)}}
							{{form_errors(form.title)}}
						</div>
						<div class="col-3 mb-3">
							{{form_label(form.picture)}}
							{{form_widget(form.picture)}}
							{{form_help(form.picture)}}
							{{form_errors(form.picture)}}
						</div>


						{{form_row(form.steps)}}
						{# ! voir affichage input saisie steps #}
						{# <div class="col-3 mb-3">
							{{form_label(form.steps)}}
							{{form_help(form.steps)}} #}

							{# ! ul existe à l'inspecteur mais vide #}
							{# the data-index attribute is required for the JavaScript code below #}
								{# <ul class="steps"
									data-index="{{ form.steps|length > 0 ? form.steps|last.vars.name + 1 : 0 }}"
									data-prototype="{{ form_widget(form.steps.vars.prototype)|e('html_attr') }}"
								></ul>
							<button type="button" class="add_item_link" data-collection-holder-class="steps">Ajouter une étape</button>
						</div>  #}

						<div class="col-3 mb-3">
							{{form_label(form.status)}}
							{{form_widget(form.status)}}
							{{form_help(form.status)}}
							{{form_errors(form.status)}}
						</div>
						<div class="col-3 mb-3">
							{{form_label(form.duration)}}
							{{form_widget(form.duration)}}
							{{form_help(form.duration)}}
							{{form_errors(form.duration)}}
						</div>
						{# ! voir affichage input saisie ingredients #}
						<div class="col-3 mb-3">
							{{form_label(form.ingredients)}}
							{{form_widget(form.ingredients)}}
							{{form_help(form.ingredients)}}
							{{form_errors(form.ingredients)}}
						</div>
						<div class="col-3 mb-3">
							{{form_label(form.category)}}
							{{form_widget(form.category)}}
							{{form_help(form.category)}}
							{{form_errors(form.category)}}
						</div>
						
						
						<button class="btn btn-primary" type="submit">Envoyer</button>
						
					{{form_end(form)}}
				</div>
			</div>
		</div>
	</div>
</div>

{% endblock %}

{# ! JS pour ajout d'une étape non fonctionnel #}
{% block js %}
	<script>
		const recipe_steps = document.getElementById("recipe_steps");
        console.log(recipe_steps);
        recipe_steps.innerHTML = `<ul style="display: unset">
									<li><input type="text" placeHolder="ajouter votre étape..." name="recipe[steps][]"/><button style="color:red; font-size: 2rem">-</button></li>
								  </ul>
                                  <button id="btn_add_steps" style="padding:0.5rem; border: 2px solid; border-radius: 999px">+</button>`;

		const button = document.getElementById("btn_add_steps");
		console.log(button);

		button.addEventListener('click', function(e) {
			e.preventDefault();
			console.log("btn_add_steps clicked");

			const li = document.createElement('li');

			const input = document.createElement('input');
			input.setAttribute("placeHolder", "ajouter votre étape...");
			input.setAttribute("placeHolder", "ajouter votre étape...");
			input.setAttribute("type", "text");
			li.append(input);

			// <button style="color:red; font-size: 2rem">-</button>	

			const ul = document.querySelector("#recipe_steps ul");
			ul.append(li);

		})

		{# document
			.querySelectorAll('.add_item_link')
			.forEach(btn => {
				btn.addEventListener("click", addFormToCollection)
			});

		const addFormToCollection = (e) => {
			const collectionHolder = document.querySelector('.' + e.currentTarget.dataset.collectionHolderClass);

			const item = document.createElement('li');

			item.innerHTML = collectionHolder
				.dataset
				.prototype
				.replace(
				/__name__/g,
				collectionHolder.dataset.index
				);

			collectionHolder.appendChild(item);

			collectionHolder.dataset.index++;
		}; #}

	</script>
{% endblock %}
